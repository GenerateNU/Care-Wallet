basePath: /
definitions:
  models.File:
    properties:
      file_id:
        type: integer
      file_name:
        type: string
      file_size:
        type: integer
      group_id:
        type: integer
      task_id:
        type: integer
      upload_by:
        type: integer
      upload_date:
        type: string
    type: object
  models.Medication:
    properties:
      medication_id:
        type: integer
      medication_name:
        type: string
    type: object
  models.Task:
    properties:
      created_by:
        description: User ID
        type: string
      created_date:
        type: string
      end_date:
        type: string
      group_id:
        type: integer
      notes:
        type: string
      repeating:
        type: boolean
      repeating_end_date:
        type: string
      repeating_interval:
        type: string
      start_date:
        type: string
      task_id:
        type: integer
      task_info:
        type: string
      task_status:
        type: string
      task_type:
        type: string
    type: object
  models.TaskUser:
    properties:
      taskID:
        type: integer
      userID:
        type: string
    type: object
  tasks.Assignment:
    properties:
      assigner:
        type: string
      userIDs:
        items:
          type: string
        type: array
    type: object
  tasks.Removal:
    properties:
      userIDs:
        items:
          type: string
        type: array
    type: object
info:
  contact: {}
  description: This is an API for the Care-Wallet App.
  title: Care-Wallet API
  version: "1.0"
paths:
  /files/upload:
    post:
      description: Upload a file to database and S3 bucket
      parameters:
      - description: Body with file zip
        in: formData
        name: file_data
        required: true
        type: file
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.File'
        "400":
          description: Bad Request
      summary: Upload a file
      tags:
      - file
  /medications:
    get:
      description: get all user medications
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Medication'
            type: array
      summary: Get All Meds
      tags:
      - medications
  /tasks/{tid}/assignees:
    post:
      description: assign users to task
      parameters:
      - description: Task ID to assign users to
        in: path
        name: tid
        required: true
        type: string
      - description: Users to assign to task and assignee
        in: body
        name: _
        required: true
        schema:
          $ref: '#/definitions/tasks.Assignment'
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TaskUser'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Assign Users To Task
      tags:
      - tasks
  /tasks/{tid}/remove:
    delete:
      description: remove users from task
      parameters:
      - description: Task ID to remove users from
        in: path
        name: tid
        required: true
        type: string
      - description: Users to remove from task
        in: body
        name: _
        required: true
        schema:
          $ref: '#/definitions/tasks.Removal'
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TaskUser'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Remove Users From Task
      tags:
      - tasks
  /tasks/filtered:
    get:
      description: get filtered tasks
      parameters:
      - in: query
        name: createdBy
        type: string
      - in: query
        name: endDate
        type: string
      - in: query
        name: groupID
        type: string
      - in: query
        name: startDate
        type: string
      - in: query
        name: taskStatus
        type: string
      - in: query
        name: taskType
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Task'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Get Filtered Tasks
      tags:
      - tasks
swagger: "2.0"
